name: Deploy API to Server

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to deploy"
        required: true
        default: "main"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to DEV Server
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # Find and kill the running uvicorn process
            # pgrep -f "uvicorn main:app" | xargs -r kill || true

            # Find uvicorn process
            UVICORN_PID=$(pgrep -f "uvicorn main:app" | sort -n | head -n 1)
            
            if [ -n "$UVICORN_PID" ]; then
              echo "Stopping FastAPI (PID: $UVICORN_PID)..."
              kill "$UVICORN_PID"
              sleep 2  # Allow process to exit
            
              # Ensure it's fully stopped
              if pgrep -f "uvicorn main:app" | grep -q "$UVICORN_PID"; then
                echo "Process still running, force killing..."
                kill -9 "$UVICORN_PID"
              fi
            else
              echo "No running FastAPI process found."
            fi
            
            # navigate to the work directory
            cd ${{ secrets.SERVER_DEPLOYMENT_PATH }}

            # Clone repo if missing
            if [ ! -d ".git" ]; then
              git clone https://github.com/zoltanpal/api.palzoltan.net.git .
              git checkout ${{ github.ref_name }}
            fi

            # Fetch latest changes
            git fetch origin

            # Hard reset to match the latest remote state
            git reset --hard origin/${{ github.ref_name }}
            git clean -fd  # Remove untracked files

            git checkout ${{ github.ref_name }}

            # Set up Python & Poetry
            export POETRY_HOME=$HOME/.poetry
            export PATH="$POETRY_HOME/bin:$HOME/.local/bin:$PATH"

            # Install Poetry if not available
            if ! command -v poetry &> /dev/null; then
              curl -sSL https://install.python-poetry.org | python3 -
              export PATH="$HOME/.local/bin:$PATH"
            fi

            # Ensure Poetry uses in-project virtual environments
            poetry config virtualenvs.in-project true

            # Clear Poetry cache (optional but useful if hashes mismatch)
            poetry cache clear pypi --all

            # Remove old lock file and regenerate
            rm -f poetry.lock
            poetry lock

            # Install dependencies (including the project itself)
            poetry install

            # Start the API
            nohup poetry run python -m uvicorn main:app > fastapi.log 2>&1 &

            # Confirm the process is running
            pgrep -f "uvicorn main:app" || echo "Failed to start FastAPI"
